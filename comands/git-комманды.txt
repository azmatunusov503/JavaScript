
Базовые команды

Git status – проверка статуса для коммитов
Git log – список созданных коммитов
Git merge – соединение веток
Ssh-keygen – создание ключа для подключение к удалённому репозиторию
Git push – Заливка на репозиторий 
Git pull – скачать с репозитория
Git clone – клонировать репозиторий
Git remote add test – создание ссылки на репозиторий
Git add . – Добавление всех файлов в очередь на коммит
Git commit -m ‘комментарий’ – создание коммита
Git commit --amend -m имя_коммит - меняет название локального коммит
Git commit --amend --no-edit - позволяет не создавая коммит добавить изменение в последний имеющие коммит (Это работает в локально)
Git add index.html – добавление определённого файла
Gitk – просмотр всего репозитория 
Git config --list – вся инфа конфигурации
Git config user.name 'UserName' - ваше имя
Git config user.email 'UserEmail' - ваша почта
Git config gui.encoding utf-8 - кодировка
Git --version – версия гита
Git branch – список веток 
Git branch имя_ветки - для создание новой ветки
Git switch -c hotfix/T-12 - 
Git switch имя_ветки - для переключение на ветку
Git switch --detach 1.0.0 - переключение с помощью тега
Git chechout - для переключение, его можно использовать для переключение с тегом, имени_веток и с ид коммита. Также можно восстанавливать файл 
Git rm --cached nameFolder - удаляет папку nameFolder из отслеживания Git, но сама папка и её содержимое остаются на вашем диске
Git remote -v - проверка текущие удалённый репозитории
Git remote set-url nameBranch NewLink - чтобы изменить URL
Git tag 1.0.0 - создает тег
Git tag -d имя_тега - для удаление тега
Git push --delete origin имя_тега - Для удаление тега который находится в репозитории
Git rm имя_файла - удаляет файл
Git restore --staged имя_файла > Git restore имя_файла - восстанавливает файл
Git ls-files - показывает файлы имеющие в рабочей области
Git restore имя_файла - откатывает изменение
Git clean -dn - показывает что будет удален (удаляется не отслеживаемые файлы)
Git clean -df - удаляет не отслеживаемые файлы


Команды с доп флагами
Git commit -m Название коммит -m доп инфа
Git reset --soft HEAD~1 - мягко откатывает относительно от HEAD на один коммит вниз, не удаляет изменение
Git reset HEAD~1 - мягко откатывает относительно от HEAD на один коммит вниз, не удаляет изменение 
Git reset --hard HEAD~1 - откатывает относительно от HEAD на один коммит вниз, и удаляет изменение
Git log --merge - показывает конфликтные ветки
Git merge --abort - откатывает слияние веток
Git merge -s recursive -X theirs имя_ветки - для слияние Recursive Merge
Git reflog - показывает полную историю локальной репозитории



Продвинутый уровень работы с git
Stash
Git stash - добавляет изменение в локальный stash
Git stash list - проверка stash списка
Git stash push -m StashName - добавляет изменение в stash с определенным именем
Git stash  







работа в команде последовательность команд
git add .
git commit -m namecommit
git push -u url(origin) master(branch)
если получили error
git pull url(origin) master(branch)
git add .
git commit -m namecommit
git push -u url(origin) master(branch)
=== === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === 
